diff --git a/subprojects/gst-plugins-good/gst/matroska/matroska-mux.c b/subprojects/gst-plugins-good/gst/matroska/matroska-mux.c
index e6144328f8..7c684eaed3 100644
--- a/subprojects/gst-plugins-good/gst/matroska/matroska-mux.c
+++ b/subprojects/gst-plugins-good/gst/matroska/matroska-mux.c
@@ -68,6 +68,7 @@ enum
 {
   PROP_0,
   PROP_WRITING_APP,
+  PROP_TAGS_IN_HEADER,
   PROP_DOCTYPE_VERSION,
   PROP_MIN_INDEX_INTERVAL,
   PROP_STREAMABLE,
@@ -81,6 +82,7 @@ enum
 
 #define  DEFAULT_DOCTYPE_VERSION         2
 #define  DEFAULT_WRITING_APP             "GStreamer Matroska muxer"
+#define  DEFAULT_TAGS_IN_HEADER          FALSE
 #define  DEFAULT_MIN_INDEX_INTERVAL      0
 #define  DEFAULT_STREAMABLE              FALSE
 #define  DEFAULT_TIMECODESCALE           GST_MSECOND
@@ -342,6 +344,10 @@ gst_matroska_mux_class_init (GstMatroskaMuxClass * klass)
       g_param_spec_string ("writing-app", "Writing application.",
           "The name the application that creates the matroska file.",
           NULL, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+  g_object_class_install_property (gobject_class, PROP_TAGS_IN_HEADER,
+      g_param_spec_boolean ("tags-in-header", "Tags in header",
+          "Write all avaliable tags in the matroska header",
+          DEFAULT_TAGS_IN_HEADER, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
   g_object_class_install_property (gobject_class, PROP_DOCTYPE_VERSION,
       g_param_spec_int ("version", "DocType version",
           "This parameter determines what Matroska features can be used.",
@@ -523,6 +529,7 @@ gst_matroska_mux_init (GstMatroskaMux * mux, gpointer g_class)
   /* property defaults */
   mux->doctype_version = DEFAULT_DOCTYPE_VERSION;
   mux->writing_app = g_strdup (DEFAULT_WRITING_APP);
+  mux->tags_in_header = DEFAULT_TAGS_IN_HEADER;
   mux->min_index_interval = DEFAULT_MIN_INDEX_INTERVAL;
   mux->ebml_write->streamable = DEFAULT_STREAMABLE;
   mux->time_scale = DEFAULT_TIMECODESCALE;
@@ -3229,7 +3236,7 @@ gst_matroska_mux_start (GstMatroskaMux * mux, GstMatroskaPad * first_pad,
     gst_ebml_write_master_finish (ebml, master);
   }
 
-  if (mux->ebml_write->streamable) {
+  if (mux->ebml_write->streamable || mux->tags_in_header) {
     const GstTagList *tags;
     gboolean has_main_tags;
 
@@ -3677,49 +3684,55 @@ gst_matroska_mux_finish (GstMatroskaMux * mux)
   }
 
   /* tags */
-  tags = gst_tag_setter_get_tag_list (GST_TAG_SETTER (mux));
-  has_main_tags = tags != NULL && !gst_matroska_mux_tag_list_is_empty (tags);
-  toc = gst_toc_setter_get_toc (GST_TOC_SETTER (mux));
+  if (mux->tags_in_header) {
+    tags = NULL;
+    has_main_tags = FALSE;
+    toc = NULL;
+  } else {
+    tags = gst_tag_setter_get_tag_list (GST_TAG_SETTER (mux));
+    has_main_tags = tags != NULL && !gst_matroska_mux_tag_list_is_empty (tags);
+    toc = gst_toc_setter_get_toc (GST_TOC_SETTER (mux));
 
-  if (has_main_tags || gst_matroska_mux_streams_have_tags (mux) || toc != NULL) {
-    guint64 master_tags = 0, master_tag;
+    if (has_main_tags || gst_matroska_mux_streams_have_tags (mux) || toc != NULL) {
+      guint64 master_tags = 0, master_tag;
 
-    GST_DEBUG_OBJECT (mux, "Writing tags");
+      GST_DEBUG_OBJECT (mux, "Writing tags");
 
-    if (has_main_tags) {
-      /* TODO: maybe limit via the TARGETS id by looking at the source pad */
-      mux->tags_pos = ebml->pos;
-      master_tags = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAGS);
-      master_tag = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAG);
+      if (has_main_tags) {
+        /* TODO: maybe limit via the TARGETS id by looking at the source pad */
+        mux->tags_pos = ebml->pos;
+        master_tags = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAGS);
+        master_tag = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAG);
 
-      if (tags != NULL)
-        gst_tag_list_foreach (tags, gst_matroska_mux_write_simple_tag, ebml);
-      if (mux->internal_toc != NULL) {
-        toc_tags = gst_toc_get_tags (mux->internal_toc);
-        toc_has_tags = (toc_tags != NULL);
-        gst_tag_list_foreach (toc_tags, gst_matroska_mux_write_simple_tag,
-            ebml);
+        if (tags != NULL)
+          gst_tag_list_foreach (tags, gst_matroska_mux_write_simple_tag, ebml);
+        if (mux->internal_toc != NULL) {
+          toc_tags = gst_toc_get_tags (mux->internal_toc);
+          toc_has_tags = (toc_tags != NULL);
+          gst_tag_list_foreach (toc_tags, gst_matroska_mux_write_simple_tag,
+              ebml);
+        }
+
+        gst_ebml_write_master_finish (ebml, master_tag);
       }
 
-      gst_ebml_write_master_finish (ebml, master_tag);
-    }
+      if (mux->internal_toc != NULL) {
+        for (cur = gst_toc_get_entries (mux->internal_toc); cur != NULL;
+            cur = cur->next) {
+          gst_matroska_mux_write_toc_entry_tags (mux, cur->data, &master_tags,
+              &toc_has_tags);
+        }
+      }
 
-    if (mux->internal_toc != NULL) {
-      for (cur = gst_toc_get_entries (mux->internal_toc); cur != NULL;
-          cur = cur->next) {
-        gst_matroska_mux_write_toc_entry_tags (mux, cur->data, &master_tags,
-            &toc_has_tags);
+      if (master_tags == 0 && gst_matroska_mux_streams_have_tags (mux)) {
+        mux->tags_pos = ebml->pos;
+        master_tags = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAGS);
       }
-    }
+      gst_matroska_mux_write_streams_tags (mux);
 
-    if (master_tags == 0 && gst_matroska_mux_streams_have_tags (mux)) {
-      mux->tags_pos = ebml->pos;
-      master_tags = gst_ebml_write_master_start (ebml, GST_MATROSKA_ID_TAGS);
+      if (master_tags != 0)
+        gst_ebml_write_master_finish (ebml, master_tags);
     }
-    gst_matroska_mux_write_streams_tags (mux);
-
-    if (master_tags != 0)
-      gst_ebml_write_master_finish (ebml, master_tags);
   }
 
   /* update seekhead. We know that:
@@ -4448,6 +4461,9 @@ gst_matroska_mux_set_property (GObject * object,
       g_free (mux->writing_app);
       mux->writing_app = g_value_dup_string (value);
       break;
+    case PROP_TAGS_IN_HEADER:
+      mux->tags_in_header = g_value_get_boolean (value);
+      break;
     case PROP_DOCTYPE_VERSION:
       mux->doctype_version = g_value_get_int (value);
       break;
@@ -4495,6 +4511,9 @@ gst_matroska_mux_get_property (GObject * object,
     case PROP_WRITING_APP:
       g_value_set_string (value, mux->writing_app);
       break;
+    case PROP_TAGS_IN_HEADER:
+      g_value_set_boolean (value, mux->tags_in_header);
+      break;
     case PROP_DOCTYPE_VERSION:
       g_value_set_int (value, mux->doctype_version);
       break;
diff --git a/subprojects/gst-plugins-good/gst/matroska/matroska-mux.h b/subprojects/gst-plugins-good/gst/matroska/matroska-mux.h
index bcb61a929b..8311701855 100644
--- a/subprojects/gst-plugins-good/gst/matroska/matroska-mux.h
+++ b/subprojects/gst-plugins-good/gst/matroska/matroska-mux.h
@@ -91,6 +91,8 @@ struct _GstMatroskaMux {
   /* Application name (for the writing application header element) */
   gchar          *writing_app;
 
+  gboolean       tags_in_header;
+
   /* Date (for the DateUTC header element) */
   GDateTime      *creation_time;
 
