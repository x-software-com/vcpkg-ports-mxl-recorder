diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.cpp b/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.cpp
index efc7d50157..e583dc5e2e 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.cpp
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.cpp
@@ -256,7 +256,7 @@ init_cuda_ctx (void)
 
 /* *INDENT-OFF* */
 static gboolean
-gst_create_cucontext (guint * device_id, CUcontext * context)
+gst_create_cucontext (guint * device_id, guint ctx_flags, CUcontext * context)
 {
   CUcontext cuda_ctx;
   CUdevice cdev = 0, cuda_dev = -1;
@@ -299,7 +299,7 @@ gst_create_cucontext (guint * device_id, CUcontext * context)
     return FALSE;
   }
 
-  if (!gst_cuda_result (CuCtxCreate (&cuda_ctx, 0, cuda_dev))) {
+  if (!gst_cuda_result (CuCtxCreate (&cuda_ctx, ctx_flags, cuda_dev))) {
     GST_WARNING ("Failed to create CUDA context for cuda device %d", cuda_dev);
     return FALSE;
   }
@@ -424,7 +424,36 @@ gst_cuda_context_new (guint device_id)
   CUcontext ctx;
   GstCudaContext *self;
 
-  if (!gst_create_cucontext (&device_id, &ctx)) {
+  if (!gst_create_cucontext (&device_id, 0, &ctx)) {
+    return nullptr;
+  }
+
+  self = gst_cuda_context_new_wrapped (ctx, device_id);
+  if (!self) {
+    CuCtxDestroy (ctx);
+    return nullptr;
+  }
+
+  self->priv->owns_context = TRUE;
+
+  if (!gst_cuda_result (CuCtxPopCurrent (&old_ctx))) {
+    GST_ERROR ("Could not pop current context");
+    g_object_unref (self);
+
+    return nullptr;
+  }
+
+  return self;
+}
+
+GstCudaContext *
+gst_cuda_context_new_with_flags (guint device_id, guint ctx_flags)
+{
+  CUcontext old_ctx;
+  CUcontext ctx;
+  GstCudaContext *self;
+
+  if (!gst_create_cucontext (&device_id, ctx_flags, &ctx)) {
     return nullptr;
   }
 
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.h b/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.h
index e62df38d4d..a2887df356 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.h
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/cuda/gstcudacontext.h
@@ -74,6 +74,9 @@ GType            gst_cuda_context_get_type    (void);
 GST_CUDA_API
 GstCudaContext * gst_cuda_context_new         (guint device_id);
 
+GST_CUDA_API
+GstCudaContext * gst_cuda_context_new_with_flags (guint device_id, guint ctx_flags);
+
 GST_CUDA_API
 GstCudaContext * gst_cuda_context_new_wrapped (CUcontext handler, CUdevice device);
 
